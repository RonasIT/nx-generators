import { prepareRequestParams } from '@ronas-it/rtkq-entity-api';
import { plainToInstance } from 'class-transformer';
import { axiosBaseQuery, createAppApi } from '<%= formatDirectory() %>/shared/data-access/api-client';
import { User } from '../user';
import { profileApiConfig } from './config';
import { GetProfileRequest } from './models';

export enum ProfileApiTag {
  PROFILE = 'profile',
}

export const profileApi = createAppApi({
  reducerPath: 'profile',
  tagTypes: [ProfileApiTag.PROFILE],
  baseQuery: axiosBaseQuery,
  endpoints: (builder) => ({
    getProfile: builder.query<User, void>({
      query: () => {
        const params = prepareRequestParams(profileApiConfig.defaultGetProfileParams, GetProfileRequest);

        return {
          method: 'GET',
          url: '/profile',
          params,
        };
      },
      transformResponse: (response) => plainToInstance(User, response),
      providesTags: [ProfileApiTag.PROFILE],
    }),
    updateProfile: builder.mutation<void, User>({
      query: (params) => {
        const request = prepareRequestParams(params, User);

        return {
          method: 'PUT',
          url: '/profile',
          data: request,
        };
      },
      invalidatesTags: [ProfileApiTag.PROFILE],
    }),
    deleteProfile: builder.mutation<void, void>({
      query: () => {
        return {
          method: 'DELETE',
          url: '/profile',
        };
      },
      invalidatesTags: [ProfileApiTag.PROFILE],
    }),
  }),
});
